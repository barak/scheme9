R4RS 6.5.6 (number->string number) ==> string
           (number->string number radix) ==> string

RADIX must be an integer, either 2, 8, 10, or 16. If omitted, RADIX
defaults to 10. The procedure NUMBER->STRING takes a number and a
radix and returns as a string an external representation of the
given number in the given radix such that

(let ((number number)
      (radix radix))
  (eqv? number
        (string->number (number->string number radix)
                        radix)))

is true. It is an error if no possible result makes this expression
true.
