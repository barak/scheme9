.\" S9E(1) Manual Page
.\" Nils M Holm, 2007, 2008
.TH s9e 1 2009-02-24 Debian Scheme 9 From Empty Space + unix extensions
.ll 70
.lt 70
.ds N "pi
.de HD		\" Header
'sp 1v
.tl 'S9E(1)'Scheme 9 from Empty Space'S9E(1)'
'sp 2v
..
.de FO		\" Footer
'sp 3v
.tl 'S9E Interpreter'Page %'S9E(1)'
'bp
..
.de B
\fB\\$1\fP
..
.de BR
\fB\\$1\fP\\$2
..
.de IR
\fI\\$1\fP\\$2
..
.de RB
\\$1\fB\\$2\\fP
..
.de I
\fI\\$1\fP
..
.de SH		\" subheader macro
.ne 5
.sp
.in 0i
.nf
\fB\\$1\fP
.fi
.in 1i
..
.de ST		\" start a table
.in 1i
.nf
..
.de ET		\" end a table
.fi
.in 0
..
.wh 0 HD	\" traps for header
.wh -5 FO	\" and footer
.nh		\" disable hyphenation
.sp
.SH NAME
.B "s9e
- Extended Scheme Interpreter
.SH USAGE
.B "s9e [\-h?] [\-gnqv] [\-m size[m]] [\-f program] [\-d image] [\-i]
.B "    [\-\- argument ...]
.SH "DESCRIPTION
.B "Scheme 9 from Empty Space
is an interpreter for a broad subset of
R4RS Scheme. The
.B s9e
command starts the extended interpreter. The extended interpreter
defines some functions that are not defined in the Scheme Reports,
but may prove useful in ``real-world'' programming.
.SH "EXTENDED PRIMITIVE FUNCTIONS
.sp
.B "Do not use these primitives directly. Use the user-level procedures
.B "outlined in the next section instead.
.sp
Procedures typically indicate failure by returning
.BR #f .
Procedures that would not otherwise return a more meaningful value
return
.B #t
in case of success. When a procedure fails, the resulting Unix error
number can be retrieved by calling
.B unix:errno
(or
.BR errno ).
.sp
.ne 3
.B "(unix:chdir string) ==> boolean
.in +4
Change the current working directory to
.IR string .
.in -4
.br
.ne 3
.B "(unix:chmod string integer) ==> boolean
.in +4
Change the access bits of the file
.I string
to the mode
.IR integer .
.in -4
.br
.ne 3
.B "(unix:chown string integer1 integer2) ==> boolean
.in +4
Change the ownership for the file
.I string
to user ID
.I integer1
and the group ID
.IR integer2 .
.in -4
.br
.ne 3
.B "(unix:command\-line) ==> list of string
.in +4
Return the command line arguments passed to
.B s9e
.I after
the "\-\-" argument.
.in -4
.br
.ne 3
.B "(unix:errno) ==> integer
.in +4
Return the Unix error code set by the most recently failed
call to a
.B unix
extension procedure.
.in -4
.br
.ne 3
.B "(unix:exit integer) ==> undefined
.in +4
Terminate the
.B s9e
process and return
.I integer
as an exit code to the calling process.
.in -4
.br
.ne 3
.B "(unix:flush output\-port) ==> boolean
.in +4
Flush the given output port.
.in -4
.br
.ne 3
.B "(unix:getcwd) ==> string
.in +4
Return the current working directory.
.in -4
.br
.ne 3
.B "(unix:getenv string) ==> string
.in +4
Return the value of the environment variable
.IR string .
If the variable is undefined, return
.BR #f .
.in -4
.br
.ne 3
.B "(unix:getgid) ==> integer
.in +4
Return the group ID of the
.B s9e
process.
.in -4
.br
.ne 3
.B "(unix:getgrnam string) ==> alist
.in +4
Return the group record for the group name
.IR string .
The returned association list has the following members:
.nf
.ft C
((name . string)    ; group name
 (gid  . integer))  ; group ID
.ft P
.fi
.in -4
.br
.ne 3
.B "(unix:getgrgid integer) ==> alist
.in +4
Return the group record for the group ID
.IR integer .
See
.B unix:getgrnam
for the structure of the return value.
.in -4
.br
.ne 3
.B "(unix:getpwent) ==> list
.in +4
Return a list of all users of the system.
.in -4
.br
.ne 3
.B "(unix:getpwnam string) ==> alist
.in +4
Return the password record for the user name
.IR string .
The returned association list has the following members:
.nf
.ft C
((name  . string)   ; user name
 (uid   . integer)  ; user ID
 (gid   . integer)  ; group ID
 (gecos . string)   ; real name
 (home  . string)   ; home directory
 (shell . string))  ; default shell
.ft P
.fi
.in -4
.br
.ne 3
.B "(unix:getpwuid integer) ==> alist
.in +4
Return the password record for the user ID
.IR integer .
See
.B unix:getpwnam
for the structure of the return value.
.in -4
.br
.ne 3
.B "(unix:getuid) ==> integer
.in +4
Return the user ID of the
.B s9e
process.
.in -4
.br
.ne 3
.B "(unix:link string1 string2) ==> boolean
.in +4
Create a (hard) link
.I string2
that refers to the same file as
.IR string1 .
.in -4
.br
.ne 3
.B "(unix:lock string) ==> boolean
.in +4
Create a lock file named ``\fIstring\fP.lock''.
If the file already exists when the function is called, return
.BR #f ,
else return
.BR #t .
.B Unix:lock
uses
.I mkdir()
to create the lock file, which is atomic on virtually all systems.
.in -4
.br
.ne 3
.B "(unix:mkdir string integer) ==> boolean
.in +4
Create directory
.I string
with mode
.IR integer .
.in -4
.br
.ne 3
.B "(unix:readdir string) ==> string
.in +4
Return a list of all file names contained in the directory
.IR string .
When the given directory does not exist, return
.BR #f .
.in -4
.br
.ne 3
.B "(unix:readlink string) ==> string
.in +4
Return the destination of the symbolic link
.IR string .
.in -4
.br
.ne 3
.B "(unix:rmdir string) ==> boolean
.in +4
Remove directory
.IR string .
.in -4
.br
.ne 3
.B "(unix:spawn string) ==> (input\-port output\-port)
.in +4
Spawn an inferior process running the command
.IR string .
Return a list of two file descriptors where the first one
can be used to read the output of the command and the second
one to send input to the command. The command will be
executed using
.br
\fCexecl("/bin/sh", "/bin/sh", "\-c", \fP\fIstring\fP\fC, NULL);\fP
.in -4
.br
.ne 3
.B "(unix:stat string) ==> alist
.in +4
Return the file status of the file
.IR string .
The returned association list has the following members:
.nf
.br
((name  . string)    ; file name
 (size  . integer)   ; size in bytes
 (uid   . integer)   ; UID of owner
 (gid   . integer)   ; GID of owner
 (mode  . integer)   ; access bits
 (ctime . integer)   ; inode change time
 (atime . integer)   ; access time
 (mtime . integer)   ; modification time
 (dev   . integer)   ; device ID of containing device
 (ino   . integer)   ; inode number
 (nlink . integer))  ; number of (hard) links
.in -4
.fi
.br
.ne 3
.B "(unix:symlink string1 string2) ==> boolean
.in +4
Create a symbolic link
.I string2
that points to the path
.IR string1 .
.in -4
.br
.ne 3
.B "(unix:system string) ==> boolean
.in +4
Run the command
.I string
and return its exit status (\fB#t\fP for success and
.B #f
for failure).
.in -4
.br
.ne 3
.B "(unix:time) ==> integer
.in +4
Returns the number of seconds since the Unix epoch.
.in -4
.br
.ne 3
.B "(unix:unlink string) ==> boolean
.in +4
Remove the file name
.IR string .
.in -4
.br
.ne 3
.B "(unix:unlock string) ==> unspecific
.in +4
Remove the file ``\fIstring\fP.lock''. If the files does not
exist, do nothing.
.in -4
.br
.ne 3
.B "(unix:utimes string) ==> boolean
.in +4
Set the access and modification time of the file
.I string
to the current time.
.in -4
.br
.ne 6
.SH "USER-LEVEL FUNCTIONS
.sp
Use these instead of the above primitives.
.sp
.ne 3
.B "(chdir string) ==> boolean
.in +4
See
.BR unix:chdir .
.in -4
.sp
.ne 3
.B "(chmod string1 integer|string2) ==> boolean
.in +4
Change the mode of the file
.I string1
to
.I integer
or
.I string2.
When an integer mode is specified, use its numeric value. A
string mode must either represent an octal mode or have the
format
.sp
.I "user+bits
or
.I "user\-bits
.sp
where
.I user
is any combination of the letters
.I "ugo
(denoting
.IR user ,
.IR group ,
and
.IR others ),
and
.I bits
is any combinations of the letters
.I "rwx
(denoting
.IR read ,
.IR write ,
and
.IR execute
permission, respectively). The letter
.I a
may be used to abbreviate
.IR ugo .
For example,
.sp
\fB(chmod "a+rw" "file")\fP
.sp
will add read and write permission to
\fIfile\fP. Using a minus sign instead of a plus sign will remove
the given permissions.
.in -4
.sp
.ne 3
.B "(chown string integer1|string1|#f integer2|string2|#f)
.br
.B "==> boolean
.in +4
Change the owning user of the file
.I string
to
.I string1
or
.I integer1
and the owning group of the file to
.I string2
or
.IR integer2 .
Numeric values will be interpreted as user IDs and strings will
be interpreted as user names. Replacing either the user or the
group part with
.B "#f
will leave that part unchanged. For instance,
.sp
\fB(chown #f "wheel" "file")\fP
.sp
will change the group of \fIfile\fP to \fIwheel\fP, but leave
its user unchanged.
.in -4
.sp
.ne 3
.B "(command\-line) ==> list of string
.in +4
See
.BR unix:command\-line .
.in -4
.sp
.ne 3
.B "(errno) ==> integer
.in +4
See
.BR unix:errno .
.in -4
.sp
.ne 3
.B "(exit integer) ==>
.in +4
See
.BR unix:exit .
However, the argument of
.B exit
is optional and a return value of 0 is the default.
.in -4
.sp
.ne 3
.B "(flush output\-port) ==> boolean
.in +4
See
.BR unix:flush .
.in -4
.sp
.ne 3
.B "(format\-time string time\-list) ==> string | #f
.in +4
Format a time specification as returned by
.B unix\-time\->time
according to the description in
.IR string .
This a poor man's Common LISP
.BR format \-style
procedure intended for making time lists more readable. It
returns
.B #f
if
.I time\-list
is not a proper time list or
.I string
is erroneous (i.e.: contains a wrong format descriptor).
.sp
The following format descriptors are supported:
.nf
~w   day of week (Mon, Tue, ...)
~y   year
~:m  number of month
~@m  month name (Jan, Feb, ...)
~h   hour
~m   minute
~s   second
~~   literal ~
.fi
.sp
When a single digit appears between a
.I ~
and the rest of a format descriptor, this digit will be interpreted
as a length and the resulting string will be padded to this length
with zeros.
.sp
Example:
.nf
(format\-time "~w ~4y\-~@m\-~2d ~2h:~2m:~2s"
             '(1 2009 3 9 8 53 20))
  ==> "Tue 2009\-Apr\-09 08:53:20"
.fi
.in -4
.sp
.ne 3
.B "(getcwd) ==> string
.in +4
See
.BR unix:getcwd .
.in -4
.sp
.ne 3
.B "(getenv string) ==> string
.in +4
See
.BR unix:getenv .
.in -4
.sp
.ne 3
.B "(getgid) ==> integer
.in +4
See
.BR unix:getgid .
.in -4
.sp
.ne 3
.B "(getgrnam string) ==> alist
.in +4
See
.BR unix:getgrnam.
.in -4
.sp
.ne 3
.B "(getgrgid integer) ==> alist
.in +4
See
.BR unix:getgrgid.
.in -4
.sp
.ne 3
.B "(getpwent) ==> list
.in +4
See
.BR unix:getpwent .
.in -4
.sp
.ne 3
.B "(getpwnam string) ==> alist
.in +4
See
.BR unix:getpwnam.
.in -4
.sp
.ne 3
.B "(getpwuid integer) ==> alist
.in +4
See
.BR unix:getpwuid.
.in -4
.sp
.ne 3
.B "(getuid) ==> integer
.in +4
See
.BR unix:getuid.
.in -4
.sp
.ne 2
.B "(group\-name string|integer) ==> string
.in +4
Return the group name for the group \fPstring\fP or the group ID \fBinteger\fP.
(Yes, getting a group name for a group name is an identity operation.)
.in -4
.sp
.ne 3
.B "(group\-gid string|integer) ==> string
.in +4
Return the group ID for the group \fPstring\fP or the group ID \fBinteger\fP.
(Yes, getting a group ID for a group ID is an identity operation.)
.in -4
.sp
.ne 3
.B "(link string1 string2) ==> boolean
.in +4
See
.BR unix:link.
.in -4
.sp
.ne 3
.B "(lock string) ==> boolean
.in +4
See
.BR unix:lock.
.in -4
.sp
.ne 3
.B "(mkdir string integer) ==> boolean
.in +4
See
.BR unix:mkdir.
.in -4
.sp
.ne 3
.B "(readdir string) ==> list
.in +4
See
.BR unix:readdir.
.in -4
.sp
.ne 3
.B "(readlink string) ==> string
.in +4
See
.BR unix:readlink.
.in -4
.sp
.ne 3
.B "(rmdir string) ==> boolean
.in +4
See
.BR unix:rmdir.
.in -4
.sp
.ne 3
.B "(spawn string) ==> (input\-port output\-port)
.in +4
See
.BR unix:spawn.
.in -4
.sp
.ne 3
.B "(stat string) ==> alist
.in +4
See
.BR unix:stat.
.in -4
.sp
.ne 3
.B "(stat\-name string) ==> string
.in +4
Return the file name of the file \fPstring\fP.
.in -4
.sp
.ne 3
.B "(stat\-size string) ==> integer
.in +4
Return the size of the file \fPstring\fP.
.in -4
.sp
.ne 3
.B "(stat\-uid string) ==> integer
.in +4
Return the UID of the owner of the file \fPstring\fP.
.in -4
.sp
.ne 3
.B "(stat\-gid string) ==> integer
.in +4
Return the GID of the owning group of the file \fPstring\fP.
.in -4
.sp
.ne 3
.B "(stat\-mode string) ==> integer
.in +4
Return the permission bits of the file \fPstring\fP.
.in -4
.sp
.ne 3
.B "(stat\-ctime string) ==> integer
.in +4
Return the inode change time of the file \fPstring\fP.
.in -4
.sp
.ne 3
.B "(stat\-atime string) ==> integer
.in +4
Return the access time of the file \fPstring\fP.
.in -4
.sp
.ne 3
.B "(stat\-mtime string) ==> integer
.in +4
Return the modification time of the file \fPstring\fP.
.in -4
.sp
.ne 3
.B "(stat\-dev string) ==> integer
.in +4
Return the device ID of the device on which the file \fPstring\fP resides.
.in -4
.sp
.ne 3
.B "(stat\-ino string) ==> integer
.in +4
Return the inode number of the file \fPstring\fP.
.in -4
.sp
.ne 3
.B "(stat\-nlink  string) ==> integer
.in +4
Return the link count of the file \fPstring\fP.
.in -4
.sp
.ne 3
.B "(symlink string1 string2) ==> boolean
.in +4
See
.BR unix:symlink.
.in -4
.sp
.ne 3
.B "(system string) ==> boolean
.in +4
See
.BR unix:system.
.in -4
.sp
.ne 3
.B "(time) ==> integer
.in +4
See
.BR unix:time .
.in -4
.sp
.ne 3
.B "(time\->unix\-time time\-list) ==> integer | #f
.in +4
Convert a time list as described in
.B unix\-time\->time
to the number of seconds since the Unix epoch. Return
.B #f
if
.I time\-list
is not a proper time list.
.in -4
.sp
.ne 3
.B "(unix\-time\->time integer) ==> time\-list
.in +4
Convert the number of seconds since the Unix epoch given as the
.I integer
argument to a more useful representation:
.sp
.nf
(weekday  ; 0..6 where 0 = Monday
 year     ; 1970..2038
 month    ; 1..12
 day      ; 1..31, depends on month
 hour     ; 0..23
 minute   ; 0..60
 second)  ; 0..60
.fi
.in -4
.sp
.ne 3
.B "(unlink string) ==> boolean
.in +4
See
.BR unix:unlink.
.in -4
.sp
.ne 3
.B "(unlock string) ==> unspecific
.in +4
See
.BR unix:unlock.
.in -4
.sp
.ne 3
.B "(user\-name integer|string) ==> string
.in +4
Return the user name for the user \fPstring\fP or the user ID \fBinteger\fP.
(Yes, getting a user name for a user name is an identity operation.)
.in -4
.sp
.ne 3
.B "(user\-uid integer|string) ==> integer
.in +4
Return the user ID for the user \fPstring\fP or the user ID \fBinteger\fP.
(Yes, getting a user ID for a user ID is an identity operation.)
.in -4
.sp
.ne 3
.B "(user\-gid integer|string) ==> integer
.in +4
Return the group ID for the user \fPstring\fP or the user ID \fBinteger\fP.
.in -4
.sp
.ne 3
.B "(user\-gecos integer|string) ==> string
.in +4
Return the GECOS information (full name) for the user \fPstring\fP or
the user ID \fBinteger\fP.
.in -4
.sp
.ne 3
.B "(user\-home integer|string) ==> string
.in +4
Return the home directory for the user \fPstring\fP or the user ID
\fBinteger\fP.
.in -4
.sp
.ne 3
.B "(user\-shell integer|string) ==> string
.in +4
Return the login shell for the user \fPstring\fP or the user ID \fBinteger\fP.
.in -4
.sp
.ne 3
.B "(utimes string) ==> boolean
.in +4
See
.BR unix:utimes.
.in -4
.SH "SEE ALSO
s9(1)
.SH AUTHOR
Nils M Holm <nmh@t3x.org>
