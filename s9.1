.\" S9(1) Manual Page
.\" Copyright (C) 2007 Nils M Holm
.ll 70
.lt 70
.ds N "pi
.de HD		\" Header
'sp 1v
.tl 'S9(1)'Scheme 9 from Empty Space'S9(1)'
'sp 2v
..
.de FO		\" Footer
'sp 3v
.tl 'S9 Interpreter'Page %'S9(1)'
'bp
..
.de B
\fB\\$1\fP
..
.de BR
\fB\\$1\fP\\$2
..
.de RB
\\$1\fB\\$2\\fP
..
.de I
\fI\\$1\fP
..
.de SH		\" subheader macro
.ne 5
.sp
.in 0i
.nf
\fB\\$1\fP
.fi
.in 1i
..
.de ST		\" start a table
.in 1i
.nf
..
.de ET		\" end a table
.fi
.in 0
..
.wh 0 HD	\" traps for header
.wh -5 FO	\" and footer
.nh		\" disable hyphenation
.sp
.SH NAME
.B "s9
- Scheme Interpreter
.SH USAGE
.B "s9 [-qv] [-f program]
.SH "DESCRIPTION
.B "Scheme 9 from Empty Space
is an interpreter for a broad subset of
R5RS Scheme. The
.B s9
command starts the interpreter.
.SH "OPTIONS
.B "-f program
.in +4
Run
.B program
and exit (implies -q).
.in -4
.B "-q
.in +4
Be quiet: skip banners and prompts, exit on errors.
.in -4
.B -v
.in +4
Display version and exit.
.in -4
.SH "TECHNICAL DETAILS
S9fES is a tree-walking interpreter using deep binding and hashed
environments. It employs a constant-space mark and sweep garbage
collector with in-situ string and vector pool compaction. Memory
pools grow on demand.
.br
The interpreter uses bignum integer arithmetics exclusively.
.SH "ADDITIONS
The symbol
.B **
is always bound to the normal form of the expression most recently
evaluated at the top level.
.sp
These S9 procedures are not in R5RS:
.sp
.ne 3
.B "(expand-quasiquote form) => expanded-form
.in +4
If
.B form
is a quasiquoted expression, re-write it to an equivalent expression
that does not use quasiquotation.
.in -4
.ne 3
.B "(expand-syntax form) => expanded-form
.in +4
If
.B form
applies a syntax transformer, return the expanded form, else return
the form.
.in -4
.br
.ne 4
.B "(fold-left proc base list ...) => folded-list
.in +4
Combine the elements of the
.BR list s
using
.BR proc .
Combine elements left-associatively.
.B Base
is the leftmost element.
.in -4
.br
.ne 4
.B "(fold-right proc base list ...) => folded-list
.in +4
Combine the elements of the
.BR list s
using
.BR proc .
Combine elements right-associatively.
.B Base
is the rightmost element.
.in -4
.br
.ne 2
.B "(map-car proc list) => mapped-list
.in +4
This is equal to
.B map
with a single list.
.in -4
.br
.ne 2
.B "(set-input-port! input-port) => unspecific
.in +4
Destructively set the current input port.
.in -4
.br
.ne 2
.B "(set-output-port! output-port) => unspecific
.in +4
Destructively set the current output port.
.in -4
.br
.ne 3
.B "(syntax->list form) => list | #f
.in +4
If the head of
.B form
is the name of a syntax object, return its syntax rules, else
return
.BR #f .
.in -4
.br
.ne 3
.B "(wrong string form) => bottom
.in +4
Print an error message of the form
.B "error: string: form
and terminate program execuation.
.B Form
may be omitted.
.in -4
.sp
Redefinition of these procedures is safe except for
.BR expand-quasiquote ,
.BR expand-syntax ,
and
.BR wrong .
.SH "LIMITATIONS
These parts of R5RS are not implemented:
.sp
Continuations:
.BR call-with-current-continuation .
.br
Named
.BR let .
.br
The
.B =>
syntax of
.BR cond .
.br
Local syntax:
.BR let-syntax ,
.BR letrec-syntax .
.br
Multiple values:
.BR values ,
.BR call-with-values .
.br
Control:
.BR do ,
.BR dynamic-wind ,
.BR eval .
.br
I/O:
.BR char-ready? .
.br
Transcripts:
.BR transcript-off ,
.BR transcript-on .
.br
Numeric base prefixes:
.BR #b ,
.BR #o ,
.BR #x .
.br
Numeric tower: rational, float, complex numbers.
.br
Numeric syntax and procedures:
.BR #e ,
.BR #i ,
.BR / ,
.BR acos ,
.BR angle ,
.BR asin ,
.BR atan ,
.BR ceiling ,
.BR complex? ,
.BR cos ,
.BR denominator ,
.BR exact->inexact ,
.BR exact? ,
.BR exp ,
.BR floor ,
.BR imag-part ,
.BR inexact->exact ,
.BR inexact? ,
.BR log ,
.BR magnitude ,
.BR make-polar ,
.BR make-rectangular ,
.BR numerator ,
.BR rational ,
.BR rationalize ,
.BR real-part ,
.BR real? ,
.BR round ,
.BR sin ,
.BR tan ,
.BR truncate .
.SH "BUGS
Quasiquotation of improper lists does not work.
.br
Only one ellipsis per rule is allowed in
.BR syntax-rules .
.SH "FILES
.B PREFIX/share/s9fes/s9.scm
.in +4
The library part of the interpreter (source code).
.in -4
.B $HOME/.s9fes/rc
.in +4
If present, this file is
.BR load ed
when the interpreter starts.
.in -4
.B *.scm
.in +4
Scheme source code.
.in -4
.SH "ENVIRONMENT
.B S9FES_LIBRARY_PATH
.in +4
A colon-separated list of directories which will be searched for
the s9 library when the interpreter is launched.
.br
Default:
.B .:~/.s9fes:/usr/local/share/s9fes
.in -4
.SH "SIGNALS
These work only if POSIX signal handling was enabled at compile time.
.sp
.B "SIGINT
.in +4
Abort input or terminate program execution.
.in -4
.B "SIGQUIT
.in +4
Terminate the interpreter process (emergency exit).
.in -4
.SH "REFERENCES
.B "http://www.schemers.org/Documents/Standards/R5RS/HTML/
.in +4
The Revised^5 Report on the Algorithmic Language Scheme.
.in -4
.sp
.B "http://www.lulu.com/content/1010408"
.in +4
Scheme 9 from Empty Space -- A Guide to Implementing Scheme in C.
.in -4
.SH AUTHOR
Nils M Holm <nmh@t3x.org>
